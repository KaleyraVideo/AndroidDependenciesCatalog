name: Release Catalog

on:
  workflow_call:
    inputs:
      specific_release_version:
        type: string
        description: Define the specific release version?
        required: false
    secrets:
      MAVEN_ACCESSKEY:
        required: true
      MAVEN_SECRETKEY:
        required: true
      MAVEN_DISTRIBUTIONID:
        required: true

  workflow_dispatch:
    inputs:
      specific_release_version:
        description: Define the specific release version?
        required: false
    secrets:
      MAVEN_ACCESSKEY:
        required: true
      MAVEN_SECRETKEY:
        required: true
      MAVEN_DISTRIBUTIONID:
        required: true
      
jobs:
  determine-runner-integration:
    name: Determine which runner to use for integration tests
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.set-runner.outputs.runner }}
    steps:
      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Determine which runner to use
        id: set-runner
        uses: benjaminmichaelis/get-soonest-available-runner@v1.1.0
        with:
          primary-runner: "self-hosted"
          fallback-runner: "ubuntu-latest"
          min-available-runners: 1
          github-token: ${{steps.generate_token.outputs.token}}
  clean_build:
    needs: determine-runner-integration
    runs-on: ${{ needs.determine-runner-integration.outputs.runner }}
    environment:
      name: release_environment
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: 'main'
      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Generate catalog tomls
        run: ./gradlew generateCatalogAsToml
      - name: Build module
        run: ./gradlew clean build
  update_catalog_version:
    needs: [ determine-runner-integration, clean_build ]
    runs-on: ${{ needs.determine-runner-integration.outputs.runner }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: 'main'
      - name: set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle
      - name: add python dependecy
        run: python3 -m pip install semver boto3
      - name: Update specific catalog version
        id: output_specific_tag
        run: ./gradlew updateCatalog -PnewCatalogVersion=${{inputs.specific_release_version }}
      - name: Update Maven credentials
        env:
          MAVEN_ACCESSKEY: ${{ secrets.MAVEN_ACCESSKEY }}
          MAVEN_SECRETKEY: ${{ secrets.MAVEN_SECRETKEY }}
          MAVEN_DISTRIBUTIONID: ${{ secrets.MAVEN_DISTRIBUTIONID }}
        run:
          echo -e "maven.accessKey=$MAVEN_ACCESSKEY\nmaven.secretKey=$MAVEN_SECRETKEY\nmaven.distributionId=$MAVEN_DISTRIBUTIONID" >> ./local.properties
      - name: Release new catalog version
        run: ./gradlew publishUploadCatalog -PdryRun=false
      - name: Pull Remote Changes
        run: git pull
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update catalog version
          tagging_message: ${{ steps.output_specific_tag.outputs.TAG }}
